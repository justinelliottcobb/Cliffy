name: Benchmarks

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  schedule:
    - cron: '0 2 * * 0'  # Weekly on Sunday at 2 AM UTC

env:
  CARGO_TERM_COLOR: always

jobs:
  rust-benchmarks:
    name: Rust Geometric Algebra Benchmarks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown
      
      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: bench-${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Cache target directory
        uses: actions/cache@v4
        with:
          path: target
          key: bench-${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Run Clifford algebra benchmarks
        run: cargo bench --workspace -- --output-format json | tee benchmark_results.json
        continue-on-error: true
      
      - name: Store benchmark results
        uses: benchmark-action/github-action-benchmark@v1
        with:
          tool: 'cargo'
          output-file-path: benchmark_results.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          comment-on-alert: true
          alert-threshold: '200%'
          fail-on-alert: false

  wasm-performance:
    name: WASM Performance Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown
      
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: wasm-bench-${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Build WASM with optimizations
        run: |
          wasm-pack build cliffy-wasm \
            --target web \
            --out-dir pkg \
            --features simd \
            --release -- --features bench
        continue-on-error: true
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run WASM performance tests
        run: |
          cd examples/collaborative-editor
          npm install
          npm run bench || echo "Benchmarks not yet implemented"
        continue-on-error: true

  framework-comparison:
    name: Framework Performance Comparison
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install comparison framework dependencies
        run: |
          npm install -g lighthouse puppeteer
          mkdir -p performance-comparison
          cd performance-comparison
          npm init -y
          npm install react react-dom vue @vue/compiler-sfc
      
      - name: Run framework comparison benchmarks
        run: |
          echo "Framework comparison benchmarks would run here"
          echo "Comparing Cliffy vs React vs Vue performance"
          echo "TODO: Implement actual performance comparison tests"
        continue-on-error: true
      
      - name: Generate performance report
        run: |
          echo "# Framework Performance Report" > performance-report.md
          echo "## Cliffy Geometric Algebra Performance" >> performance-report.md
          echo "- Direct mathematical transformations" >> performance-report.md
          echo "- No virtual DOM overhead" >> performance-report.md
          echo "- WASM SIMD optimization" >> performance-report.md
      
      - name: Upload performance report
        uses: actions/upload-artifact@v4
        with:
          name: performance-report
          path: performance-report.md